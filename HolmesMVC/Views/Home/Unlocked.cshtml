@using HolmesMVC
@using HolmesMVC.Models
@{
    ViewBag.Title = "Unlocked";
}

<h2>Unlocked Pages</h2>

<div>
    @{
        var unlockedHolmes = (Actor)ViewBag.unlockedHolmes;
        var unlockedActor = (Actor)ViewBag.unlockedActor;
        var unlockedFilm = (Episode)ViewBag.unlockedFilm;
        var unlockedEpisode = (Episode)ViewBag.unlockedEpisode;
    }
    @if (null != unlockedHolmes)
    {
        <text>Why not go fill in this Holmes's details (@ViewBag.unlockedHolmesCount left):<br />
        @Html.ActionLink(Shared.ShortName(unlockedHolmes), "Details", "Actor", new { unlockedHolmes.UrlName }, null)<br /></text>
    }
    Why not go fill in this canon actor's details (@ViewBag.unlockedActorCount left):<br />
    @Html.ActionLink(Shared.ShortName(unlockedActor), "Details", "Actor", new { unlockedActor.UrlName }, null)
    <br />
    @if (null != unlockedFilm)
    {
        <text>Or this film's cast list (@ViewBag.unlockedFilmCount left):<br />
        @Html.RouteLink(Shared.DisplayName(unlockedFilm), "EpDetails", new { adaptWord = unlockedFilm.Season.Adaptation.MediumUrlName, adaptName = unlockedFilm.Season.Adaptation.UrlName, seasonNumber = unlockedFilm.Season.AirOrder, episodeNumber = unlockedFilm.AirOrder })<br /></text>
    }
    else
    {
        <text>Or this episode's cast list (@ViewBag.unlockedEpisodeCount left):<br />
        @Html.RouteLink(Shared.DisplayName(unlockedEpisode), "EpDetails", new { adaptWord = unlockedEpisode.Season.Adaptation.MediumUrlName, adaptName = unlockedEpisode.Season.Adaptation.UrlName, seasonNumber = unlockedEpisode.Season.AirOrder, episodeNumber = unlockedEpisode.AirOrder })<br /></text>
    }
</div>