@using HolmesMVC.Enums
@model HolmesMVC.Models.Episode

@{
    ViewBag.Title = "Edit Episode";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Episode</legend>

        @Html.HiddenFor(model => model.ID)
        

        <div class="editor-label">
            @Html.LabelFor(model => model.Season.AdaptationID, "Adaptation")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Adaptation", null, new { id = "AdaptBox", data_url = Url.Action("SeasonBox", "Episode") })
            @Html.ValidationMessageFor(model => model.Season.AdaptationID)
        </div>
        
            @Html.Action("SeasonBox", new { ID = Model.Season.AdaptationID, currentSeason = Model.SeasonID })
        <span id ="SeasonOut">
        </span>

        <div class="editor-label">
            @Html.LabelFor(model => model.Story, "Story")
        </div>
        <div class="editor-field">
            <select id="StoryID" name="StoryID"> <!-- This is done by hand as the automatic binding only displays 'Final Problem', not 'FINA' -->
                <option value=""></option>
                @foreach (var story in ViewBag.Story)
                {
                    <option selected="@story.Selected" value="@story.Value">@story.Value - @story.Text</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.Story)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Airdate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Airdate, "Date")
            <select name="AirdatePrecision">
                <option value="@((int)DatePrecision.Full)" @if (Model.AirdatePrecision == (int)DatePrecision.Full)
                                  {<text>selected</text>}>Full precision</option>
                <option value="@((int)DatePrecision.Month)" @if (Model.AirdatePrecision == (int)DatePrecision.Month)
                                  {<text>selected</text>}>Accurate to month</option>
                <option value="@((int)DatePrecision.Season)" @if (Model.AirdatePrecision == (int)DatePrecision.Season)
                                  {<text>selected</text>}>Accurate to season</option>
                <option value="@((int)DatePrecision.Year)" @if (Model.AirdatePrecision == (int)DatePrecision.Year)
                                  {<text>selected</text>}>Accurate to year</option>
            </select>
            @Html.ValidationMessageFor(model => model.Airdate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Translation) <i><a href="https://translate.google.com/#auto/en/@Model.Title">Automate</a></i>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Translation)
            @Html.ValidationMessageFor(model => model.Translation)
        </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Poster)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Poster)
        @Html.ValidationMessageFor(model => model.Poster)
    </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

    <div>
        @Html.RouteLink("Back to Episode", "EpDetails", new { adaptWord = Model.Season.Adaptation.MediumUrlName, adaptName = Model.Season.Adaptation.UrlName, seasonNumber = Model.Season.AirOrder, episodeNumber = Model.AirOrder })
    </div>

@section Scripts {
    

    @Scripts.Render("~/Scripts/Apdore-editorscripts.js")

    <!-- for SeasonBox -->
    <script type="text/javascript">
        $(function() {
            $("#Season").change(function() {
                updateSeason();
            });
            updateSeason();
        });

        function updateSeason() {
            var seasonNum = $("#Season").val();
            var newEdit = "/Season/Edit/" + seasonNum;
            $("#editS").attr("href", newEdit);
            var newDel = "/Season/Delete/" + seasonNum;
            $("#deleteS").attr("href", newDel);
        };
    </script>
}
