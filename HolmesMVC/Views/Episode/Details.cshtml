@using HolmesMVC.Enums
@using Microsoft.Ajax.Utilities
@model HolmesMVC.Models.ViewModels.EpisodeView

@{
    ViewBag.Title = Model.DisplayName;
}
<link rel="canonical" href="https://appledore.azurewebsites.net/episode/@Model.EpId" />
@if (Model.Medium == (int)Medium.Television)
{
    <script type="application/ld+json">
        {
        "@@context": "http://schema.org"
        , "@@type": "TVEpisode"
        , "name": "@ViewBag.Title"
        , "partOfTVSeries": "@Model.AdaptationName"
        @if (Model.AirdatePrecision == DatePrecision.Full)
        {
            <text>, "datePublished": "@Model.Airdate.ToLongDateString()"</text>
        }
        @if (Model.SeasonCode.IndexOf('x') > -1)
        {
            <text>, "episodeNumber": @Int32.Parse(Model.SeasonCode.Split('x')[1])</text>
            <text>, "partOfSeason": @Int32.Parse(Model.SeasonCode.Split('x')[0])</text>
        }
        else
        {
            <text>, "episodeNumber": @Int32.Parse(Model.SeasonCode)</text>
        }
        @if (Model.ActorNames.Count() > 0)
        {
            <text>
                , "actor": [{ "@@type": "Person", "name": "@Html.Raw(String.Join("\" }, { \"@type\": \"Person\", \"name\": \"", Model.ActorNames))"}]
            </text>
        }
        }
    </script>
}
@if (Model.Medium == (int)Medium.Film)
{
    <script type="application/ld+json">
        {
        "@@context": "http://schema.org"
        , "@@type": "Movie"
        , "name": "@ViewBag.Title"
        @if (!String.IsNullOrEmpty(Model.Poster))
        {
            <text>, "image": "https://appledore.azurewebsites.net/Content/EpisodePosters/</text>@Model.Poster<text>.jpg"</text>
        }
        @if (Model.AirdatePrecision == DatePrecision.Full)
        {
            <text>, "datePublished": "@Model.Airdate.ToLongDateString()"</text>
        }
        @if (Model.ActorNames.Count() > 0)
        {
            <text>
                , "actor": [{ "@@type": "Person", "name": "@Html.Raw(String.Join("\" }, { \"@type\": \"Person\", \"name\": \"", Model.ActorNames))"}]
            </text>
        }
        }
    </script>
}
<section class="leftfloatdetails">
    <h2 class="detailscategory">Episode</h2>
    <h2 class="detailsheader">@ViewBag.Title
    @if (Model.Translation != null && Model.Translation != string.Empty)
    {
        <span style="font-weight: normal; font-size: small;"><i>@Model.Translation</i></span>
    }</h2>
    <ul class="actordetails">
        <li>Adaptation: @Html.ActionLink(Model.AdaptationName,"Details", "Adaptation", new { urlName = Model.AdaptationUrlName }, null)@if (Model.AdaptationTranslation != null && Model.AdaptationTranslation != string.Empty){ <span style="font-weight: normal; font-size: small;"><i>@Model.AdaptationTranslation</i></span>}</li>
        <li>Episode: @Html.DisplayFor(model => model.SeasonCode)</li>
        @{
            var airdateFormat = "dd MMMM yyyy";
            if (Model.AirdatePrecision == DatePrecision.Month)
            {
                airdateFormat = "MMMM yyyy";
            }
            else if (Model.AirdatePrecision == DatePrecision.Year)
            {
                airdateFormat = "yyyy";
            }
        }
        <li>Airdate: @Model.Airdate.ToString(airdateFormat)</li>
        @if (!Model.Story.IsNullOrWhiteSpace())
        { <text><li>Canon basis: @Html.ActionLink(Model.Story, "Details", "Story", new { id = Model.StoryCode }, null)</li></text> }
        
        @if (Model.Medium == (int)Medium.Television || Model.Medium == (int)Medium.Film)
        {
            var IMDbUrl = "https://www.imdb.com/find?s=tt&q=" + Model.DisplayName.Replace(" ", "+") + "+" + Model.Airdate.ToString("yyyy"); 
    <text>        <li>IMDb: <a target="_blank" href = '@IMDbUrl'>@Model.DisplayName</a> <i>(link not verified)</i></li></text>}
    </ul>
    <p class="dblinks">
        @if (Model.EpPrev > 0 || Model.EpPrevName != null)
        {
            <text>Previous: @Html.RouteLink(Model.EpPrevName, "EpDetails", new { adaptWord = Model.AdaptationMediumUrlName, adaptName = Model.AdaptationUrlName, seasonNumber = Model.EpPrevSeason, episodeNumber = Model.EpPrevAirOrder }) @if (Model.EpPrevTranslation != null && Model.EpPrevTranslation != string.Empty) {<span style="font-weight: normal; font-size: small;"><i>@Model.EpPrevTranslation</i></span>}
            <br />
            </text>}
        @if (Model.EpNext > 0 || Model.EpNextName != null)
        {
            <text>Next: @Html.RouteLink(Model.EpNextName, "EpDetails", new { adaptWord = Model.AdaptationMediumUrlName, adaptName = Model.AdaptationUrlName, seasonNumber = Model.EpNextSeason, episodeNumber = Model.EpNextAirOrder }) @if (Model.EpNextTranslation != null && Model.EpNextTranslation != string.Empty) {<span style="font-weight: normal; font-size: small;"><i>@Model.EpNextTranslation</i></span>}</text>}
    </p>

    @Html.Action("DatabaseLinks", "Home", new { table = "Episode", id = Model.EpId })

</section>
<section class="rightfloatdetails">
    @Html.Action("PerEpisode", "Appearance", new { Model.EpId })
</section>

<div class="clear-fix"></div>
